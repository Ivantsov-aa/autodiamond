{"ast":null,"code":"import { _ as _createClass, a as _classCallCheck } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport IMask from '../core/holder.js';\n/**\r\n  Generic element API to use with mask\r\n  @interface\r\n*/\n\nvar MaskElement = /*#__PURE__*/function () {\n  function MaskElement() {\n    _classCallCheck(this, MaskElement);\n  }\n\n  _createClass(MaskElement, [{\n    key: \"selectionStart\",\n    get:\n    /** */\n\n    /** */\n\n    /** */\n\n    /** Safely returns selection start */\n    function get() {\n      var start;\n\n      try {\n        start = this._unsafeSelectionStart;\n      } catch (e) {}\n\n      return start != null ? start : this.value.length;\n    }\n    /** Safely returns selection end */\n\n  }, {\n    key: \"selectionEnd\",\n    get: function get() {\n      var end;\n\n      try {\n        end = this._unsafeSelectionEnd;\n      } catch (e) {}\n\n      return end != null ? end : this.value.length;\n    }\n    /** Safely sets element selection */\n\n  }, {\n    key: \"select\",\n    value: function select(start, end) {\n      if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n\n      try {\n        this._unsafeSelect(start, end);\n      } catch (e) {}\n    }\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"_unsafeSelect\",\n    value: function _unsafeSelect(start, end) {}\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return false;\n    }\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents(handlers) {}\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {}\n  }]);\n\n  return MaskElement;\n}();\n\nIMask.MaskElement = MaskElement;\nexport { MaskElement as default };","map":{"version":3,"names":["_","_createClass","a","_classCallCheck","IMask","MaskElement","key","get","start","_unsafeSelectionStart","e","value","length","end","_unsafeSelectionEnd","select","selectionStart","selectionEnd","_unsafeSelect","bindEvents","handlers","unbindEvents","default"],"sources":["C:/front/autodiamond/node_modules/imask/esm/controls/mask-element.js"],"sourcesContent":["import { _ as _createClass, a as _classCallCheck } from '../_rollupPluginBabelHelpers-b054ecd2.js';\r\nimport IMask from '../core/holder.js';\r\n\r\n/**\r\n  Generic element API to use with mask\r\n  @interface\r\n*/\r\nvar MaskElement = /*#__PURE__*/function () {\r\n  function MaskElement() {\r\n    _classCallCheck(this, MaskElement);\r\n  }\r\n\r\n  _createClass(MaskElement, [{\r\n    key: \"selectionStart\",\r\n    get:\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** Safely returns selection start */\r\n    function get() {\r\n      var start;\r\n\r\n      try {\r\n        start = this._unsafeSelectionStart;\r\n      } catch (e) {}\r\n\r\n      return start != null ? start : this.value.length;\r\n    }\r\n    /** Safely returns selection end */\r\n\r\n  }, {\r\n    key: \"selectionEnd\",\r\n    get: function get() {\r\n      var end;\r\n\r\n      try {\r\n        end = this._unsafeSelectionEnd;\r\n      } catch (e) {}\r\n\r\n      return end != null ? end : this.value.length;\r\n    }\r\n    /** Safely sets element selection */\r\n\r\n  }, {\r\n    key: \"select\",\r\n    value: function select(start, end) {\r\n      if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\r\n\r\n      try {\r\n        this._unsafeSelect(start, end);\r\n      } catch (e) {}\r\n    }\r\n    /** Should be overriden in subclasses */\r\n\r\n  }, {\r\n    key: \"_unsafeSelect\",\r\n    value: function _unsafeSelect(start, end) {}\r\n    /** Should be overriden in subclasses */\r\n\r\n  }, {\r\n    key: \"isActive\",\r\n    get: function get() {\r\n      return false;\r\n    }\r\n    /** Should be overriden in subclasses */\r\n\r\n  }, {\r\n    key: \"bindEvents\",\r\n    value: function bindEvents(handlers) {}\r\n    /** Should be overriden in subclasses */\r\n\r\n  }, {\r\n    key: \"unbindEvents\",\r\n    value: function unbindEvents() {}\r\n  }]);\r\n\r\n  return MaskElement;\r\n}();\r\nIMask.MaskElement = MaskElement;\r\n\r\nexport { MaskElement as default };\r\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,YAAd,EAA4BC,CAAC,IAAIC,eAAjC,QAAwD,0CAAxD;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAG,aAAa,YAAY;EACzC,SAASA,WAAT,GAAuB;IACrBF,eAAe,CAAC,IAAD,EAAOE,WAAP,CAAf;EACD;;EAEDJ,YAAY,CAACI,WAAD,EAAc,CAAC;IACzBC,GAAG,EAAE,gBADoB;IAEzBC,GAAG;IACH;;IAEA;;IAEA;;IAEA;IACA,SAASA,GAAT,GAAe;MACb,IAAIC,KAAJ;;MAEA,IAAI;QACFA,KAAK,GAAG,KAAKC,qBAAb;MACD,CAFD,CAEE,OAAOC,CAAP,EAAU,CAAE;;MAEd,OAAOF,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKG,KAAL,CAAWC,MAA1C;IACD;IACD;;EAnByB,CAAD,EAqBvB;IACDN,GAAG,EAAE,cADJ;IAEDC,GAAG,EAAE,SAASA,GAAT,GAAe;MAClB,IAAIM,GAAJ;;MAEA,IAAI;QACFA,GAAG,GAAG,KAAKC,mBAAX;MACD,CAFD,CAEE,OAAOJ,CAAP,EAAU,CAAE;;MAEd,OAAOG,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,KAAKF,KAAL,CAAWC,MAAtC;IACD;IACD;;EAXC,CArBuB,EAkCvB;IACDN,GAAG,EAAE,QADJ;IAEDK,KAAK,EAAE,SAASI,MAAT,CAAgBP,KAAhB,EAAuBK,GAAvB,EAA4B;MACjC,IAAIL,KAAK,IAAI,IAAT,IAAiBK,GAAG,IAAI,IAAxB,IAAgCL,KAAK,KAAK,KAAKQ,cAAf,IAAiCH,GAAG,KAAK,KAAKI,YAAlF,EAAgG;;MAEhG,IAAI;QACF,KAAKC,aAAL,CAAmBV,KAAnB,EAA0BK,GAA1B;MACD,CAFD,CAEE,OAAOH,CAAP,EAAU,CAAE;IACf;IACD;;EATC,CAlCuB,EA6CvB;IACDJ,GAAG,EAAE,eADJ;IAEDK,KAAK,EAAE,SAASO,aAAT,CAAuBV,KAAvB,EAA8BK,GAA9B,EAAmC,CAAE;IAC5C;;EAHC,CA7CuB,EAkDvB;IACDP,GAAG,EAAE,UADJ;IAEDC,GAAG,EAAE,SAASA,GAAT,GAAe;MAClB,OAAO,KAAP;IACD;IACD;;EALC,CAlDuB,EAyDvB;IACDD,GAAG,EAAE,YADJ;IAEDK,KAAK,EAAE,SAASQ,UAAT,CAAoBC,QAApB,EAA8B,CAAE;IACvC;;EAHC,CAzDuB,EA8DvB;IACDd,GAAG,EAAE,cADJ;IAEDK,KAAK,EAAE,SAASU,YAAT,GAAwB,CAAE;EAFhC,CA9DuB,CAAd,CAAZ;;EAmEA,OAAOhB,WAAP;AACD,CAzE8B,EAA/B;;AA0EAD,KAAK,CAACC,WAAN,GAAoBA,WAApB;AAEA,SAASA,WAAW,IAAIiB,OAAxB"},"metadata":{},"sourceType":"module"}