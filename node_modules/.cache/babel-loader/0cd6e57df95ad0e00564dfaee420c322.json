{"ast":null,"code":"/**\r\n * Applies mask on element.\r\n * @constructor\r\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\r\n * @param {Object} opts - Custom mask options\r\n * @return {InputMask}\r\n */\nfunction IMask(el) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // currently available only for input-like elements\n\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };","map":{"version":3,"names":["IMask","el","opts","arguments","length","undefined","InputMask","default"],"sources":["C:/front/autodiamond/node_modules/imask/esm/core/holder.js"],"sourcesContent":["/**\r\n * Applies mask on element.\r\n * @constructor\r\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\r\n * @param {Object} opts - Custom mask options\r\n * @return {InputMask}\r\n */\r\nfunction IMask(el) {\r\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  // currently available only for input-like elements\r\n  return new IMask.InputMask(el, opts);\r\n}\r\n\r\nexport { IMask as default };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,CAAeC,EAAf,EAAmB;EACjB,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E,CADiB,CAEjB;;EACA,OAAO,IAAIH,KAAK,CAACM,SAAV,CAAoBL,EAApB,EAAwBC,IAAxB,CAAP;AACD;;AAED,SAASF,KAAK,IAAIO,OAAlB"},"metadata":{},"sourceType":"module"}