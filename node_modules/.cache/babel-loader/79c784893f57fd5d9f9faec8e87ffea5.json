{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alina\\\\front-end\\\\autodiamond\\\\src\\\\components\\\\catalog\\\\model-catalog.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport SearchForm from \"../main/search-form\";\nimport AccordionAnalogue from \"./accordion-analogue\";\nimport AccordionAsideCatalog from \"./accordion-aside\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModelCatalog = _ref => {\n  _s();\n\n  let {\n    url,\n    catalog,\n    currentCatalog,\n    location,\n    setProductForCart,\n    setCurrentCatalog\n  } = _ref;\n  const [chosenProductCategory, setChosenProductCategories] = useState(null);\n  const [allProducts, setAllProducts] = useState([]); // componentDidMount() {\n  //     const { currentCatalog } = this.props;\n  //     const { allProducts } = this.state;\n  //     currentCatalog.models[0].spares.map(part => (\n  //         part.categories && part.categories.map(category => (\n  //             category.products.map(product => (\n  //                 product.parts && product.parts.map(part => (\n  //                     allProducts.push(part)\n  //                 ))\n  //             ))\n  //         ))\n  //     ));\n  //     this.setState({ allProducts: allProducts });\n  // }\n\n  const loadModelProducts = async () => {\n    fetch(`${url}/api/products?brand${currentCatalog.name}=?model=${currentCatalog.models}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => console.log(response));\n  };\n\n  useEffect(() => {\n    console.log(currentCatalog);\n    loadModelProducts();\n  }, []);\n\n  const handleSparesCategoryClick = e => {\n    const {\n      value\n    } = e.target.dataset;\n    const chosenCategorySpares = { ...currentCatalog,\n      models: [{\n        model: currentCatalog.models[0].model,\n        spares: currentCatalog.models[0].spares.map(item => item.value === value ? { ...item,\n          selected: !item.selected\n        } : { ...item\n        })\n      }]\n    };\n    setCurrentCatalog(chosenCategorySpares);\n  };\n\n  const handleProductClick = e => {\n    const {\n      value\n    } = e.target.dataset;\n    const {\n      chosenProductCategory\n    } = this.state;\n    const {\n      allProducts\n    } = this.state;\n    const openProductAnalogue = chosenProductCategory && { ...chosenProductCategory,\n      parts: chosenProductCategory.parts.map(part => part.article === value ? { ...part,\n        selected: !part.selected\n      } : { ...part,\n        selected: false\n      })\n    };\n    const openAllProductsAnalogue = allProducts.map(product => product.article === value ? { ...product,\n      selected: !product.selected\n    } : { ...product,\n      selected: false\n    });\n    this.setState({\n      chosenProductCategory: openProductAnalogue,\n      allProducts: openAllProductsAnalogue\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(SearchForm, {\n      catalog: catalog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModelCatalog, \"ghGFBAB+BD7vPLmZO/eANOqrGSA=\");\n\n_c = ModelCatalog;\nexport default ModelCatalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModelCatalog\");","map":{"version":3,"names":["useState","useEffect","SearchForm","AccordionAnalogue","AccordionAsideCatalog","ModelCatalog","url","catalog","currentCatalog","location","setProductForCart","setCurrentCatalog","chosenProductCategory","setChosenProductCategories","allProducts","setAllProducts","loadModelProducts","fetch","name","models","method","headers","then","response","console","log","handleSparesCategoryClick","e","value","target","dataset","chosenCategorySpares","model","spares","map","item","selected","handleProductClick","state","openProductAnalogue","parts","part","article","openAllProductsAnalogue","product","setState"],"sources":["C:/Users/alina/front-end/autodiamond/src/components/catalog/model-catalog.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport SearchForm from \"../main/search-form\";\r\nimport AccordionAnalogue from \"./accordion-analogue\";\r\nimport AccordionAsideCatalog from \"./accordion-aside\";\r\n\r\nconst ModelCatalog = ({ url, catalog, currentCatalog, location, setProductForCart, setCurrentCatalog }) => {\r\n    const [chosenProductCategory, setChosenProductCategories] = useState(null);\r\n    const [allProducts, setAllProducts] = useState([]);\r\n\r\n    // componentDidMount() {\r\n    //     const { currentCatalog } = this.props;\r\n    //     const { allProducts } = this.state;\r\n\r\n    //     currentCatalog.models[0].spares.map(part => (\r\n    //         part.categories && part.categories.map(category => (\r\n    //             category.products.map(product => (\r\n    //                 product.parts && product.parts.map(part => (\r\n    //                     allProducts.push(part)\r\n    //                 ))\r\n    //             ))\r\n    //         ))\r\n    //     ));\r\n\r\n    //     this.setState({ allProducts: allProducts });\r\n    // }\r\n\r\n    const loadModelProducts = async () => {\r\n        fetch(`${url}/api/products?brand${currentCatalog.name}=?model=${currentCatalog.models}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        })\r\n            .then(response => console.log(response))\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(currentCatalog);\r\n        loadModelProducts();\r\n    }, []);\r\n\r\n    const handleSparesCategoryClick = e => {\r\n        const { value } = e.target.dataset;\r\n        const chosenCategorySpares = {\r\n            ...currentCatalog, models: [\r\n                {\r\n                    model: currentCatalog.models[0].model, spares: currentCatalog.models[0].spares.map(item => (\r\n                        item.value === value ? { ...item, selected: !item.selected } : { ...item }\r\n                    ))\r\n                }\r\n            ]\r\n        }\r\n\r\n        setCurrentCatalog(chosenCategorySpares);\r\n    }\r\n\r\n    const handleProductClick = e => {\r\n        const { value } = e.target.dataset;\r\n        const { chosenProductCategory } = this.state;\r\n        const { allProducts } = this.state;\r\n\r\n        const openProductAnalogue = chosenProductCategory && {\r\n            ...chosenProductCategory, parts: chosenProductCategory.parts.map(part => (\r\n                part.article === value ? { ...part, selected: !part.selected } : { ...part, selected: false }\r\n            ))\r\n        }\r\n\r\n        const openAllProductsAnalogue = allProducts.map(product => (\r\n            product.article === value ? { ...product, selected: !product.selected } : { ...product, selected: false }\r\n        ))\r\n\r\n        this.setState({ chosenProductCategory: openProductAnalogue, allProducts: openAllProductsAnalogue });\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <SearchForm catalog={catalog} />\r\n            {/* {allProducts.length > 0 &&\r\n                <div className='model-catalog'>\r\n                    <h1>{currentCatalog.name + ', ' + currentCatalog.models}</h1>\r\n                    <div className='model-catalog__wrapper'>\r\n                        <aside>\r\n                            <ul>\r\n                                {currentCatalog.models[0].spares && currentCatalog.models[0].spares.map((item, i) => (\r\n                                    <li className={`${item.selected ? 'open' : ''}`} key={i}>\r\n                                        {item.name}\r\n                                        {item.selected &&\r\n                                            <AccordionAsideCatalog spares={item} setChosenProductCategories={setChosenProductCategories} />\r\n                                        }\r\n                                        <button\r\n                                            className={`model-catalog_button ${item.selected ? 'active' : ''}`}\r\n                                            data-value={item.value}\r\n                                            onClick={this.handleSparesCategoryClick}\r\n                                        >\r\n                                            <span\r\n                                                data-value={item.value}\r\n                                                onClick={this.handleSparesCategoryClick}>\r\n                                            </span>\r\n                                        </button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </aside>\r\n                        <div>\r\n                            {chosenProductCategory ?\r\n                                chosenProductCategory.parts.map((part, i) => (\r\n                                    <div className='product-group__wrapper' key={i}>\r\n                                        <div className='product-group'>\r\n                                            <div>\r\n                                                <h2>{part.title}</h2>\r\n                                                <p>Артикул: {part.article}</p>\r\n                                                <p>Производитель: {part.manufacturer}</p>\r\n                                            </div>\r\n                                            {part.selected ?\r\n                                                <button className={part.selected ? 'active' : ''} data-value={part.article} onClick={this.handleProductClick}>Скрыть все товары</button>\r\n                                                :\r\n                                                <button className={part.selected ? 'active' : ''} data-value={part.article} onClick={this.handleProductClick}>Показать все товары</button>\r\n                                            }\r\n                                        </div>\r\n                                        <div className={`analogue-products ${part.selected ? 'open' : 'hidden'}`}>\r\n                                            <AccordionAnalogue setProductForCart={setProductForCart} selected={part.selected} analogue={part.analogue} />\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                                :\r\n                                allProducts.map((product, i) => (\r\n                                    <div className='product-group__wrapper' key={i}>\r\n                                        <div className='product-group'>\r\n                                            <div>\r\n                                                <h2>{product.title}</h2>\r\n                                                <p>Артикул: {product.article}</p>\r\n                                                <p>Производитель: {product.manufacturer}</p>\r\n                                            </div>\r\n                                            {product.selected ?\r\n                                                <button className={product.selected ? 'active' : ''} data-value={product.article} onClick={this.handleProductClick}>Скрыть все товары</button>\r\n                                                :\r\n                                                <button className={product.selected ? 'active' : ''} data-value={product.article} onClick={this.handleProductClick}>Показать все товары</button>\r\n                                            }\r\n                                        </div>\r\n                                        <div className={`analogue-products ${product.selected ? 'open' : 'hidden'}`}>\r\n                                            <AccordionAnalogue setProductForCart={setProductForCart} location={location.pathname} selected={product.selected} analogue={product.analogue} />\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>} */}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ModelCatalog;"],"mappings":"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"},"metadata":{},"sourceType":"module"}