name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log in and get a bearer token.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: user@test.test
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: user1234
        type: string
        custom: []
    cleanBodyParameters:
      email: user@test.test
      password: user1234
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":20,"name":"\u0420\u043e\u0437\u0430\u043b\u0438\u043d\u0430","lastname":"\u0411\u043e\u0433\u0434\u0430\u043d\u043e\u0432","patronymic":null,"phone":"+12252668081","email":"pavel.trofimov@example.org","role":"user"},"token":"hhjhfddsdghjhjjjhggffsdsdgvvt435dffggs4|1"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Bad credentials"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/signup
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sign up a new user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The username.'
        required: true
        example: Will
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'The lastname.'
        required: true
        example: Smith
        type: string
        custom: []
      patronymic:
        name: patronymic
        description: 'The user patronymic.'
        required: false
        example: vel
        type: string
        custom: []
      phone:
        name: phone
        description: "The user's phone number."
        required: true
        example: '+12252668081'
        type: string
        custom: []
      email:
        name: email
        description: "The user's email."
        required: true
        example: user@test.com
        type: string
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: 'G8")T^v$?W'
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: ducimus
        type: string
        custom: []
    cleanBodyParameters:
      name: Will
      lastname: Smith
      patronymic: vel
      phone: '+12252668081'
      email: user@test.com
      password: 'G8")T^v$?W'
      password_confirmation: ducimus
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "You are registered"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Deletes user authentication tokens.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Logged out"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hbkfvc6Z61ge85VdD3Ea4Pa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieves authenticated user data with orders.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":21,"name":"\u041b\u0438\u043b\u0438\u044f","lastname":"\u0421\u0430\u0444\u043e\u043d\u043e\u0432","patronymic":null,"phone":"+12252668081","email":"qmartynov@example.org","role":"user"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VhP6edk4f65D8gZacb3avE1'
    controller: null
    method: null
    route: null
    custom: []
